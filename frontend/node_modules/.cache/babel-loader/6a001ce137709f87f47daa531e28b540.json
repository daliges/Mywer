{"ast":null,"code":"var _jsxFileName = \"/home/daliges/Musicdw/frontend/src/components/FindSongs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { fetchPlaylist, findTracks } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindSongs = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [trackData, setTrackData] = useState([]);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const searchPlaylist = () => {\n    fetch(`http://127.0.0.1:8000/get-playlist/?playlist_url=${encodeURIComponent(query)}`).then(response => response.json()).then(data => {\n      setTrackData(data.tracks.items);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n      alert(\"Error: \" + error.message);\n    });\n  };\n  const handleCheckboxChange = index => {\n    setSelectedTracks(prevSelected => {\n      if (prevSelected.includes(index)) {\n        return prevSelected.filter(i => i !== index);\n      } else {\n        return [...prevSelected, index];\n      }\n    });\n  };\n  const findSelectedTracks = () => {\n    const selected = selectedTracks.map(index => trackData[index]).map(item => ({\n      track: item.track.name,\n      artist: item.track.artists.map(a => a.name).join(\", \")\n    }));\n    if (selected.length === 0) {\n      alert(\"No tracks selected.\");\n      return;\n    }\n    fetch(\"http://127.0.0.1:8000/find-tracks/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        tracks: selected\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(\"Found music:\", data);\n      const count = Array.isArray(data) ? data.length : 0;\n      alert(\"Found \" + count + \" matches.\");\n    }).catch(error => {\n      console.error(\"Find error:\", error);\n      alert(\"Error finding tracks.\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Enter Playlist URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Paste playlist URL...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: searchPlaylist,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: findSelectedTracks,\n      children: \"Find Selected Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"result\",\n      children: trackData.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Track Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Album Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Artists\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: trackData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                className: \"track-checkbox\",\n                checked: selectedTracks.includes(index),\n                onChange: () => handleCheckboxChange(index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.track.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.track.album.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.track.artists.map(artist => artist.name).join(\", \")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(FindSongs, \"RwuEcrxcCVdqCiKnQ819FKzL79w=\");\n_c = FindSongs;\nexport default FindSongs;\nvar _c;\n$RefreshReg$(_c, \"FindSongs\");","map":{"version":3,"names":["React","useState","fetchPlaylist","findTracks","jsxDEV","_jsxDEV","FindSongs","_s","query","setQuery","trackData","setTrackData","selectedTracks","setSelectedTracks","searchPlaylist","fetch","encodeURIComponent","then","response","json","data","tracks","items","catch","error","console","alert","message","handleCheckboxChange","index","prevSelected","includes","filter","i","findSelectedTracks","selected","map","item","track","name","artist","artists","a","join","length","method","headers","body","JSON","stringify","log","count","Array","isArray","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","id","checked","album","_c","$RefreshReg$"],"sources":["/home/daliges/Musicdw/frontend/src/components/FindSongs.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { fetchPlaylist, findTracks } from \"../services/api\";\n\nconst FindSongs = () => {\n  const [query, setQuery] = useState(\"\");\n  const [trackData, setTrackData] = useState([]);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n\n  const searchPlaylist = () => {\n    fetch(`http://127.0.0.1:8000/get-playlist/?playlist_url=${encodeURIComponent(query)}`)\n      .then(response => response.json())\n      .then(data => {\n        setTrackData(data.tracks.items);\n      })\n      .catch(error => {\n        console.error(\"Error:\", error);\n        alert(\"Error: \" + error.message);\n      });\n  };\n\n  const handleCheckboxChange = (index) => {\n    setSelectedTracks(prevSelected => {\n      if (prevSelected.includes(index)) {\n        return prevSelected.filter(i => i !== index);\n      } else {\n        return [...prevSelected, index];\n      }\n    });\n  };\n\n  const findSelectedTracks = () => {\n    const selected = selectedTracks.map(index => trackData[index])\n      .map(item => ({\n        track: item.track.name,\n        artist: item.track.artists.map(a => a.name).join(\", \")\n      }));\n      \n    if (selected.length === 0) {\n      alert(\"No tracks selected.\");\n      return;\n    }\n\n    fetch(\"http://127.0.0.1:8000/find-tracks/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ tracks: selected })\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"Found music:\", data);\n        const count = Array.isArray(data) ? data.length : 0;\n        alert(\"Found \" + count + \" matches.\");\n      })\n      .catch(error => {\n        console.error(\"Find error:\", error);\n        alert(\"Error finding tracks.\");\n      });\n  };\n\n  return (\n    <div className=\"search-container\">\n      <h2>Enter Playlist URL</h2>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Paste playlist URL...\"\n      />\n      <button onClick={searchPlaylist}>Search</button>\n      <button onClick={findSelectedTracks}>Find Selected Tracks</button>\n      <div id=\"result\">\n        {trackData.length > 0 && (\n          <table>\n            <thead>\n              <tr>\n                <th>Select</th>\n                <th>Track Name</th>\n                <th>Album Name</th>\n                <th>Artists</th>\n              </tr>\n            </thead>\n            <tbody>\n              {trackData.map((item, index) => (\n                <tr key={index}>\n                  <td>\n                    <input\n                      type=\"checkbox\"\n                      className=\"track-checkbox\"\n                      checked={selectedTracks.includes(index)}\n                      onChange={() => handleCheckboxChange(index)}\n                    />\n                  </td>\n                  <td>{item.track.name}</td>\n                  <td>{item.track.album.name}</td>\n                  <td>{item.track.artists.map(artist => artist.name).join(\", \")}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default FindSongs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}