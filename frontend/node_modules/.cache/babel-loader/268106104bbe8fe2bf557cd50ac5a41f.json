{"ast":null,"code":"var _jsxFileName = \"/home/daliges/Musicdw/frontend/src/components/FindSongs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FindSongs = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [trackData, setTrackData] = useState([]);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const [foundTracks, setFoundTracks] = useState([]);\n  const [downloadSelections, setDownloadSelections] = useState([]);\n  const [isDownloading, setIsDownloading] = useState(false); // NEW\n  const [progress, setProgress] = useState(0); // NEW\n\n  /* …  all existing handlers unchanged … */\n\n  /* --------  ONLY THIS HANDLER CHANGED  -------- */\n  const handleDownloadSelected = async () => {\n    if (downloadSelections.length === 0) {\n      alert(\"No tracks selected for download.\");\n      return;\n    }\n\n    // Build the payload the backend expects\n    const toDownload = downloadSelections.map(i => {\n      var _foundTracks$i;\n      return (_foundTracks$i = foundTracks[i]) === null || _foundTracks$i === void 0 ? void 0 : _foundTracks$i.found_on_jamendo;\n    }).filter(Boolean) // skip undefined\n    .map(t => ({\n      name: t.name,\n      audio: t.audio,\n      artist: t.artist_name\n    }));\n    setIsDownloading(true);\n    setProgress(0);\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/download-tracks/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          tracks: toDownload\n        })\n      });\n      if (!response.ok) throw new Error(\"Download failed\");\n\n      /* ---- optional progress (works in Chromium / Edge / FF) ---- */\n      const reader = response.body.getReader();\n      const contentLength = +response.headers.get(\"Content-Length\") || 0;\n      let received = 0;\n      const chunks = [];\n      while (true) {\n        const {\n          done,\n          value\n        } = await reader.read();\n        if (done) break;\n        chunks.push(value);\n        received += value.length;\n        if (contentLength) setProgress(Math.round(received / contentLength * 100));\n      }\n      const blob = new Blob(chunks, {\n        type: \"application/zip\"\n      });\n      /* ----------------------------------------------------------- */\n\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = \"selected_tracks.zip\";\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      URL.revokeObjectURL(url);\n    } catch (err) {\n      console.error(err);\n      alert(\"Download error\");\n    } finally {\n      setIsDownloading(false);\n      setProgress(0);\n    }\n  };\n\n  /* ------------  JSX (small addition for progress)  ------------- */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: foundTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"found-tracks\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadSelected,\n        disabled: isDownloading,\n        children: isDownloading ? \"Downloading…\" : \"Download Selected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), isDownloading && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"8px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n          value: progress,\n          max: \"100\",\n          style: {\n            width: \"100%\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this), progress ? `${progress}%` : \"starting…\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(FindSongs, \"FrN9w6j3Sy+TRALtLuhtDlaouZU=\");\n_c = FindSongs;\nexport default FindSongs;\nvar _c;\n$RefreshReg$(_c, \"FindSongs\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FindSongs","_s","query","setQuery","trackData","setTrackData","selectedTracks","setSelectedTracks","foundTracks","setFoundTracks","downloadSelections","setDownloadSelections","isDownloading","setIsDownloading","progress","setProgress","handleDownloadSelected","length","alert","toDownload","map","i","_foundTracks$i","found_on_jamendo","filter","Boolean","t","name","audio","artist","artist_name","response","fetch","method","headers","body","JSON","stringify","tracks","ok","Error","reader","getReader","contentLength","get","received","chunks","done","value","read","push","Math","round","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","appendChild","click","remove","revokeObjectURL","err","console","error","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","max","width","_c","$RefreshReg$"],"sources":["/home/daliges/Musicdw/frontend/src/components/FindSongs.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst FindSongs = () => {\n  const [query, setQuery] = useState(\"\");\n  const [trackData, setTrackData] = useState([]);\n  const [selectedTracks, setSelectedTracks] = useState([]);\n  const [foundTracks, setFoundTracks] = useState([]);\n  const [downloadSelections, setDownloadSelections] = useState([]);\n  const [isDownloading, setIsDownloading] = useState(false);   // NEW\n  const [progress, setProgress] = useState(0);                 // NEW\n\n  /* …  all existing handlers unchanged … */\n\n  /* --------  ONLY THIS HANDLER CHANGED  -------- */\n  const handleDownloadSelected = async () => {\n    if (downloadSelections.length === 0) {\n      alert(\"No tracks selected for download.\");\n      return;\n    }\n\n    // Build the payload the backend expects\n    const toDownload = downloadSelections.map(i => foundTracks[i]?.found_on_jamendo)\n      .filter(Boolean)                     // skip undefined\n      .map(t => ({\n        name:  t.name,\n        audio: t.audio,\n        artist: t.artist_name\n      }));\n\n    setIsDownloading(true);\n    setProgress(0);\n\n    try {\n      const response = await fetch(\"http://127.0.0.1:8000/download-tracks/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ tracks: toDownload }),\n      });\n\n      if (!response.ok) throw new Error(\"Download failed\");\n\n      /* ---- optional progress (works in Chromium / Edge / FF) ---- */\n      const reader = response.body.getReader();\n      const contentLength = +response.headers.get(\"Content-Length\") || 0;\n      let received = 0;\n      const chunks = [];\n\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) break;\n        chunks.push(value);\n        received += value.length;\n        if (contentLength) setProgress(Math.round(received / contentLength * 100));\n      }\n      const blob = new Blob(chunks, { type: \"application/zip\" });\n      /* ----------------------------------------------------------- */\n\n      const url  = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = \"selected_tracks.zip\";\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n      URL.revokeObjectURL(url);\n    } catch (err) {\n      console.error(err);\n      alert(\"Download error\");\n    } finally {\n      setIsDownloading(false);\n      setProgress(0);\n    }\n  };\n\n  /* ------------  JSX (small addition for progress)  ------------- */\n  return (\n    <div className=\"search-container\">\n      {/* ... all existing JSX ... */}\n\n      {foundTracks.length > 0 && (\n        <div className=\"found-tracks\">\n          {/* existing table & checkboxes */}\n          <button onClick={handleDownloadSelected} disabled={isDownloading}>\n            {isDownloading ? \"Downloading…\" : \"Download Selected\"}\n          </button>\n          {isDownloading && (\n            <div style={{ marginTop: \"8px\" }}>\n              <progress value={progress} max=\"100\" style={{ width: \"100%\" }} />\n              {progress ? `${progress}%` : \"starting…\"}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FindSongs;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}